name: CI

on:
  push:
    branches:
      - main

jobs:
  frontend-build:
    runs-on: self-hosted
    name: üöÄ Build and Run Frontend
    steps:
      - name: üìÇ Print working directory
        run: pwd

      - name: üìÇ List directory contents
        run: ls -la ${{ github.workspace }}

      - name: üîí Change file permissions
        run: echo ${{ secrets.DEPLOY_PASSWORD }} | sudo -S chown -R $USER:$USER ${{ github.workspace }}

      - name: üì¶ Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: üåç Create .env file
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> frontend/.env
          echo "VITE_API_KEY=${{ secrets.VITE_API_KEY }}" >> frontend/.env
          echo "PORT=${{ secrets.PORT }}" >> frontend/.env

      - name: üìÇ List frontend directory contents
        run: ls -la frontend

      - name: üõ†Ô∏è Build Docker image
        run: |
          cd frontend
          docker build -t lct-frontend:latest . 2>&1 | tee ../build_output.log
        continue-on-error: false

      - name: üöÄ Run Docker container
        if: success()
        run: |
          docker stop lct-frontend || true
          docker rm lct-frontend || true
          docker run -d --name lct-frontend -p ${{ secrets.PORT }}:80 \
            -e VITE_API_URL=${{ secrets.VITE_API_URL }} \
            -e VITE_API_KEY=${{ secrets.VITE_API_KEY }} \
            lct-frontend:latest

      - name: üìú Upload build log
        uses: actions/upload-artifact@v2
        with:
          name: build-log
          path: build_output.log

      - name: üì§ Create GitHub Deployment
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/deployments
          ref: ${{ github.sha }}
          environment: production
          description: 'Deploying lct-frontend'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚úÖ Update Deployment Status to Success
        if: success()
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/deployments/${{ steps.create_deployment.outputs.id }}/statuses
          state: success
          environment: production
          log_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚ùå Update Deployment Status to Failure
        if: failure()
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/deployments/${{ steps.create_deployment.outputs.id }}/statuses
          state: failure
          environment: production
          log_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
